{"version":3,"sources":["Components/Form/Input/Input.jsx","Components/Form/Form.jsx","pages/SignUp/SignUpPage.jsx"],"names":["Input","validation","label","placeholder","name","error","register","type","defaultValue","className","htmlFor","id","message","Form","inputs","onUnmount","onSubmit","useForm","watch","errors","formState","handleSubmit","watchAllFields","val","useRef","useEffect","current","data","map","el","inputType","memo","SignUpPage","useSelector","state","isAuth","auth","form","forms","dispatch","useDispatch","getForm","to","login","password","signUp","setDefaultValue"],"mappings":"yJAkBeA,EAhBD,SAAC,GAAmF,IAAjFC,EAAgF,EAAhFA,WAAYC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,YAAaC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC5E,OACE,sBAAKC,UAAU,cAAf,UACE,uBAAOC,QAASN,EAAhB,SAAuBF,IACvB,mCACEM,aAAcA,EACdD,KAAMA,EACNI,GAAIP,EACJD,YAAaA,GACTG,EAASF,EAAMH,KAErB,qBAAKQ,UAAU,UAAf,gBAA0BJ,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAOO,c,SCTjCC,EAAO,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EAM5CC,cAJFX,EAF8C,EAE9CA,SACAY,EAH8C,EAG9CA,MACaC,EAJiC,EAI9CC,UAAaD,OACbE,EAL8C,EAK9CA,aAEIC,EAAiBJ,IACjBK,EAAMC,mBAUZ,OATAC,qBAAU,WACRF,EAAIG,QAAUJ,IACb,CAACA,IACJG,qBAAU,WACR,OAAO,WACDV,GAAWA,EAAUQ,EAAIG,YAE9B,IAGD,uBAAMV,SAAUK,GAAa,SAACM,GAAD,OAAUX,EAASW,MAAhD,UACGb,GACCA,EAAOc,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEEzB,KAAMyB,EAAGzB,KACTF,MAAO2B,EAAG3B,MACVC,YAAa0B,EAAG1B,YAChBF,WAAY4B,EAAG5B,WACfK,SAAUA,EACVD,MAAOc,EAAOU,EAAGzB,MACjBG,KAAMsB,EAAGC,UACTtB,aAAcqB,EAAGrB,cARZqB,EAAGlB,OAWbG,GACC,qBAAKL,UAAU,cAAf,SACE,wBAAQF,KAAK,SAASE,UAAU,SAAhC,0BASKsB,mBAAKlB,I,iCCjDpB,yDAOMmB,EAAa,WAAO,IAAD,EACEC,aAAY,SAACC,GACpC,MAAO,CACLC,OAAQD,EAAME,KAAKD,OACnBE,KAAMH,EAAMI,MAAN,mBAHFH,EADe,EACfA,OAAQE,EADO,EACPA,KAMVE,EAAWC,cASjB,GALAf,qBAAU,WACHY,GACHE,EAASE,YAAQ,qBAElB,CAACJ,EAAME,IACNJ,EACF,OAAO,cAAC,IAAD,CAAUO,GAAG,gCAMtB,OACE,qCACE,oBAAIjC,UAAU,QAAd,qBACA,cAAC,IAAD,CAAMO,SANO,SAAC,GAAyB,IAAvB2B,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzBL,EAASM,YAAOF,EAAOC,EAAU,kBAAkB,KAKvB7B,UAlBZ,SAACO,GACjBiB,EAASO,YAAgB,iBAAkBxB,KAiBOR,OAAM,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAMvB,aAKrDiB,yBAAKC","file":"static/js/6.5e1f969e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Input = ({ validation, label, placeholder, name, error, register, type, defaultValue }) => {\n  return (\n    <div className=\"input-block\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        defaultValue={defaultValue}\n        type={type}\n        id={name}\n        placeholder={placeholder}\n        {...register(name, validation)}\n      />\n      <div className=\"warning\">{error?.message}</div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { memo, useEffect, useRef } from 'react';\nimport Input from './Input/Input';\nimport { useForm } from 'react-hook-form';\n\nconst Form = ({ inputs, onUnmount, onSubmit }) => {\n  const {\n    register,\n    watch,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  const watchAllFields = watch();\n  const val = useRef();\n  useEffect(() => {\n    val.current = watchAllFields;\n  }, [watchAllFields]);\n  useEffect(() => {\n    return () => {\n      if (onUnmount) onUnmount(val.current);\n    };\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit((data) => onSubmit(data))}>\n      {inputs &&\n        inputs.map((el) => (\n          <Input\n            key={el.id}\n            name={el.name}\n            label={el.label}\n            placeholder={el.placeholder}\n            validation={el.validation}\n            register={register}\n            error={errors[el.name]}\n            type={el.inputType}\n            defaultValue={el.defaultValue}\n          />\n        ))}\n      {inputs && (\n        <div className=\"input-block\">\n          <button type=\"submit\" className=\"button\">\n            Submit\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default memo(Form);\n","import React, { memo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport Form from '../../Components/Form/Form';\nimport { getForm, setDefaultValue, signUp } from '../../redux/reducers';\n\nconst SignUpPage = () => {\n  const { isAuth, form } = useSelector((state) => {\n    return {\n      isAuth: state.auth.isAuth,\n      form: state.forms['signupPageForm'],\n    };\n  });\n  const dispatch = useDispatch();\n  const onUnmount = (watchAllFields) => {\n    dispatch(setDefaultValue('signupPageForm', watchAllFields));\n  };\n  useEffect(() => {\n    if (!form) {\n      dispatch(getForm('signupPageForm'));\n    }\n  }, [form, dispatch]);\n  if (isAuth) {\n    return <Redirect to=\"/takeoff-staff-test/profile\" />;\n  }\n\n  const onSubmit = ({ login, password }) => {\n    dispatch(signUp(login, password, 'Sign Up succes', false));\n  };\n  return (\n    <>\n      <h2 className=\"title\">Sign up</h2>\n      <Form onSubmit={onSubmit} onUnmount={onUnmount} inputs={form?.inputs} />\n    </>\n  );\n};\n\nexport default memo(SignUpPage);\n"],"sourceRoot":""}